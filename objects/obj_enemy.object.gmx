<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 100;
hp_max = 100;   // 체력

spd = 0;    // 이동 속도
dir = 2;    // 정지 탐색 각도

attack = 0;     // 공격 여부
gun_delay = 0;  // 총 발사 딜레이

route = 0;      // 초기 움직임 상태 설정
course = 0;     // 루트 2일시 세부 움직임 설정

detect = 0;             // 플레이어 감지
detect_delay = 0;       // 플레이어 감지 딜레이

getup = 0   // 일어날 때

enemy_x = x;
enemy_y = y;        // 초기 좌표 값 저장
enemy_angle = image_angle;  // 초기 앵글 저장

player_x = 0;   // 플레이어 위치 저장
player_y = 0;

detect_ball_1 = 0;    // 시각 탐지 볼 발사
detect_ball_2 = 0;    // 청각 탐지 볼 발사

sensor_circle = instance_create(x,y,obj_sensor_circle);
sensor_rect = instance_create(x,y,obj_sensor_rect);

image_xscale = 1;
image_yscale = 1;

timeline_index = detect_timeline;
timeline_running = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>총알 발사 딜레이</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gun_delay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>공격 함수 초기화</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attack = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>겟업 함수 초기화</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>getup = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>탐지 볼 딜레이</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>detect_delay = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>루트 1 코드</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 생존 상태 코드

if ( hp &gt; 50 )
{
    depth = 10;
    
    if( route == 1 )    // 루트 1 시작 ( 정지 상태 )
    {
    
        if( detect_ball_1 == 1 )    // 시각 범위 탐지 볼 발사
        {
            if( detect_delay == 0 )
            {
                detect_delay = 1;
                instance_create(x,y,obj_detect_ball);
                alarm[0] = 2;
            }
        }   // 시각 범위 탐지 볼 발사 끝
        
        if( detect_ball_2 == 1 )    // 청각 범위 탐지 볼 발사
        {
            if( detect_delay == 0 )
            {
                detect_delay = 1;
                instance_create(x,y,obj_detect_ball);
                alarm[0] = 2;
            }
        }   // 청각 범위 탐지 볼 발사 끝
        
        if( detect == 0 )   // 정지 감시
        {
            if( global.enemy_gun_m == 0 )
            {
                sprite_index = spr_enemy;
                image_angle = enemy_angle;
            }
            else
            {
                sprite_index = spr_enemy_gun;
                
                if( obj_player.gun_m == 1 )
                {
                    if( obj_player.attack == 1 )
                        image_angle = point_direction(x,y,obj_player.x,obj_player.y);
                }
            }
        }
        
        if( detect == 1 )     // 추적 모드 시작
        {
            if( global.enemy_gun_m == 0 )     // 플레이어 총 발포 전 추적 모드
            {
                spd = 5;
                dir = 2;
                timeline_running = false;
                
                image_angle = point_direction(x,y,player_x,player_y);
                
                if( attack == 0 )
                {
                    sprite_index = spr_enemy_walk;
                    mp_potential_step(player_x,player_y, spd, false);
                }
                
                if( distance_to_object(obj_player) &lt; 12 )
                {
                    if( attack == 0 )
                    {
                        attack = 1;
                        audio_play_sound(snd_batswing, 1, false);
                        instance_create(x,y,obj_enemy_attack_hit_box);
                        sprite_index = spr_enemy_attack_rod;
                        alarm[2] = 10;
                    }
                }
                
                if( x == player_x &amp;&amp; y == player_y )
                {
                    if( distance_to_object(obj_player) &gt; 12 )
                    {
                        spd = 0;
                        detect = 2;
                    }
                }
            }       // 총 발포 전 추적 모드 종료
            
            else    // 총 발포 후 추적 모드
            {
                spd = 5;
                dir = 2;
                timeline_running = false;

                if( attack == 1 )
                {
                    image_angle = point_direction(x,y,obj_player.x,obj_player.y);
                    
                    if( gun_delay == 0 )
                    {
                        gun_delay = 1;
                        
                        audio_play_sound(snd_EM16,1,false);
                        instance_create(x,y,obj_enemy_gun_bullet);
                        sprite_index = spr_enemy_gun_attack;
                        alarm[3] = 5;
                    }
                    
                }
                else
                {
                    sprite_index = spr_enemy_gun_walk;
                    
                    image_angle = point_direction(x,y,player_x,player_y);
                    
                    mp_potential_step(player_x,player_y, spd, false);
                    
                    if( x == player_x &amp;&amp; y == player_y )
                        detect = 2;
                }
            }   // 총 발포 후 추적 모드 종료
        }   // 추적 모드 끝
        
        if( detect == 2 )   // 정지 후 주변 탐색
        {
            spd = 0;
            
            if( global.enemy_gun_m == 0 )
                sprite_index = spr_enemy;
            else
                sprite_index = spr_enemy_gun;
            
            image_angle += dir;
            
            if( !timeline_running )
            {
                timeline_position = 0;
                timeline_running = true;
            }
        }
        if( detect == 3 )   // 주변 탐색 후 제자리 이동
        {
            spd = 2;
            dir = 2;
            
            timeline_running = false;
            image_speed = 0.3;
            
            if( global.enemy_gun_m == 0)
                sprite_index = spr_enemy_walk;
            else
                sprite_index = spr_enemy_gun_walk;
            
            if( x == enemy_x &amp;&amp; y == enemy_y )
            {
                detect = 0;
                
                if( global.enemy_gun_m == 1 )
                    image_angle = enemy_angle;
            }
            else
            {
                image_angle = point_direction(x,y,enemy_x,enemy_y);
                mp_potential_step(enemy_x,enemy_y, spd, false);
            }
        }
    }   // 루트 1 끝

}




















</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>루트 2 코드</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( hp &gt; 50 )
{
    if( route == 2 )   // 루트 2 시작 ( 이동 상태 )
    {
        
        if( detect_ball_1 == 1 )    // 시각 범위 탐지 볼 발사
        {
            if( detect_delay == 0 )
            {
                detect_delay = 1;
                instance_create(x,y,obj_detect_ball);
                alarm[0] = 2;
            }
        }   // 시각 범위 탐지 볼 발사 끝
        
        if( detect_ball_2 == 1 )    // 청각 범위 탐지 볼 발사
        {
            if( detect_delay == 0 )
            {
                detect_delay = 1;
                instance_create(x,y,obj_detect_ball);
                alarm[0] = 2;
            }
        }   // 청각 범위 탐지 볼 발사 끝
        
        if( detect == 0 )   // 탐지 이동 시작
        {
            if( course == 1 )   // 오른쪽 이동 탐지
            {
                image_angle = 0;
                image_speed = 0.3;
                
                if( global.enemy_gun_m == 0)
                    sprite_index = spr_enemy_walk;
                else
                    sprite_index = spr_enemy_gun_walk;
                
                if( global.enemy_gun_m == 0)
                    spd = 2;
                else
                    spd = 3;
                    
                x += spd;
                
                if( place_free(x+32,y) == 0 )
                {
                    course = 2;
                }
            }
            if( course == 2 )   // 왼쪽 이동 탐지
            {
                image_angle = 180;
                image_speed = 0.3;
                
                if( global.enemy_gun_m == 0)
                    sprite_index = spr_enemy_walk;
                else
                    sprite_index = spr_enemy_gun_walk;
                    
                if( global.enemy_gun_m == 0)
                    spd = 2;
                else
                    spd = 3;
                    
                x -= spd;
                
                if( place_free(x-32,y) == 0 )
                {
                    course = 1;
                }
            }
            if( course == 3 )   // 아래쪽 이동 탐지
            {
                image_angle = 270;
                image_speed = 0.3;
                
                if( global.enemy_gun_m == 0)
                    sprite_index = spr_enemy_walk;
                else
                    sprite_index = spr_enemy_gun_walk;
                
                if( global.enemy_gun_m == 0)
                    spd = 2;
                else
                    spd = 3;
                    
                y += spd;
                
                if( place_free(x,y+32) == 0 )
                {
                    course = 4;
                }
            }
            if( course == 4 )   // 위쪽 이동 탐지
            {
                image_angle = 90;
                image_speed = 0.3;
                
                if( global.enemy_gun_m == 0)
                    sprite_index = spr_enemy_walk;
                else
                    sprite_index = spr_enemy_gun_walk;
                
                if( global.enemy_gun_m == 0)
                    spd = 2;
                else
                    spd = 3;
                    
                y -= spd;
                
                if( place_free(x,y-32) == 0 )
                {
                    course = 3;
                }
            }         
        }   // 탐지 이동 끝
        
        if( detect == 1 )     // 추적 모드 시작
        {
            if( global.enemy_gun_m == 0 )   // 플레이어 총 발포 전 추적 모드
            {
                spd = 5;
                dir = 2;
                timeline_running = false;
                
                image_angle = point_direction(x,y,player_x,player_y);
                
                if( attack == 0 )
                {
                    sprite_index = spr_enemy_walk;
                    mp_potential_step(player_x,player_y, spd, false);
                }
                
                if( distance_to_object(obj_player) &lt; 12 )
                {
                    if( attack == 0 )
                    {
                        attack = 1;
                        audio_play_sound(snd_batswing, 1, false);
                        instance_create(x,y,obj_enemy_attack_hit_box);
                        sprite_index = spr_enemy_attack_rod;
                        alarm[2] = 10;
                    }
                }
                
                if( x == player_x &amp;&amp; y == player_y )
                {
                    if( distance_to_object(obj_player) &gt; 12 )
                    {
                        spd = 0;
                        detect = 2;
                    }
                }
            }   // 플레이어 총 발포 전 추적 모드 종료
            
            else    // 총 발포 후 추적 모드
            {
                spd = 5;
                dir = 2;
                timeline_running = false;

                if( attack == 1 )
                {
                    image_angle = point_direction(x,y,obj_player.x,obj_player.y);
                    
                    if( gun_delay == 0 )
                    {
                        gun_delay = 1;
                        
                        audio_play_sound(snd_EM16,1,false);
                        instance_create(x,y,obj_enemy_gun_bullet);
                        sprite_index = spr_enemy_gun_attack;
                        alarm[3] = 10;
                    }
                    
                }
                else
                {
                    sprite_index = spr_enemy_gun_walk;
                    
                    image_angle = point_direction(x,y,player_x,player_y);
                    
                    mp_potential_step(player_x,player_y, spd, false);
                    
                    if( x == player_x &amp;&amp; y == player_y )
                        detect = 2;
                }            
            }   // 총 발포 후 추적 모드 종료
        }   // 추적 모드 끝
        
        if( detect == 2 )   // 정지 후 주변 탐색
        {
            spd = 0;
            
            if( global.enemy_gun_m == 0)
                sprite_index = spr_enemy;
            else
                sprite_index = spr_enemy_gun;
                
            image_angle += dir;
            
            if( !timeline_running )
            {
                timeline_position = 0;
                timeline_running = true;
            }
        }
        if( detect == 3 )   // 주변 탐색 후 제자리 이동
        {
            spd = 2;
            dir = 2;
            
            timeline_running = false;
            image_speed = 0.3;
            
            if( global.enemy_gun_m == 0)
                sprite_index = spr_enemy_walk;
            else
                sprite_index = spr_enemy_gun_walk;
            
            if( x == enemy_x &amp;&amp; y == enemy_y )
            {
                detect = 0;
            }
            else
            {
                image_angle = point_direction(x,y,enemy_x,enemy_y);
                mp_potential_step(enemy_x,enemy_y, spd, false);
            }
        }

        
    }   // 루트 2 끝
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>기절, 사망 상태 코드</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// 기절 상태, 사망 상태 코드

if( hp &lt;= 50 &amp;&amp; hp &gt; 0 )
{
    depth = 30;
    timeline_running = false;
    
    if( getup == 0 )
    {
        if( hp &gt; 30 &amp;&amp; hp &lt;= 50 )
        {
            alarm[1] = 150;
            getup = 2;
        }
        if( hp &gt; 0 &amp;&amp; hp &lt;= 30 )
        {
            alarm[1] = 300;
            getup = 2;
        }
        
        if( detect == 1 )
        {
            image_angle += 180;
            sprite_index = spr_enemy_faint_front;
        }
        else
        {
            sprite_index = spr_enemy_faint_back;
        }
    }
    
    if( getup == 1 )
    {
        getup = 0;
        detect = 2;
        hp = 100;
        image_speed = 0.2;
        sprite_index = spr_enemy_getup;
    }
}
if( hp &lt;= 0 &amp;&amp; hp &gt;= -20 )
{
    image_speed = 0.2;
    
    if( sprite_index == spr_enemy_faint_front )
        sprite_index = spr_enemy_dead_front;
    if( sprite_index == spr_enemy_faint_back )
        sprite_index = spr_enemy_dead_back;
}
if( hp &lt;= -50 )
{
    depth = 30;
    image_speed = 0;
    
    if( detect == 1 )
    {   
        if( getup == 0 )
        {
            getup = 2;
            image_angle += 180;
            
        }
        sprite_index = spr_enemy_dead_front;
        image_index = 11;
    }
    else
    {
        sprite_index = spr_enemy_dead_back;
        image_index = 6;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( getup == 0 )    // 기절 후 다시 일어난 후
{
    image_speed = 1;
    
    if( global.enemy_gun_m == 0 )
        sprite_index = spr_enemy;
    else
        sprite_index = spr_enemy_gun;
}
if( hp &lt;= 0 &amp;&amp; hp &gt;= -20 )  // 처형 당했을 때
{
    image_speed = 0;
    
    if( sprite_index == spr_enemy_dead_front )
        image_index = 11;
    if( sprite_index == spr_enemy_dead_back )
        image_index = 6;
}
if( hp &lt;= -50 )     // 총 맞았을 때
{
    image_speed = 0
    
    if( sprite_index == spr_enemy_dead_front )
        image_index = 11;
    if( sprite_index == spr_enemy_dead_back )
        image_index = 6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( hp &gt; 50 )
{
    if( global.enemy_gun_m == 0 )   // 총 발포 전 탐지 모드 일 때 다리 드로우
        if( detect == 1 || detect == 3 || course == 1 || course == 2 || course == 3 || course == 4 )
        {
            draw_sprite_ext(spr_enemy_walk_leg, -1, x, y, 1, 1, image_angle, c_white, 1);
        }
        
    if( global.enemy_gun_m == 1 )   // 총 발포 후 탐지 모드 일 때 다리 드로우
        if( detect == 1 || detect == 3 || course == 1 || course == 2 || course == 3 || course == 4 )
        {
            if( attack == 0 )
                draw_sprite_ext(spr_enemy_gun_walk_leg, -1, x, y, 1, 1, image_angle, c_white, 1);
        }
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>128,128</point>
    <point>128,128</point>
  </PhysicsShapePoints>
</object>
